{
  "hash": "44cfa787a537f96b988ffea4a7085b2f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"팔머 펭귄 데이터 분석\"\nauthor: \"12 조 - 홍주형, 황지융\"\ndate: \"2025-03-07\"\ncategories: [analysis, code]\nimage: \"penguins.png\"\n---\n\n\n# 목표 : 팔머 펭귄 종별 특징 분석\n\n<br> ![](penguins.png) <br>\n\n## 1. 팔머 펭귄 데이터 확인\n\n먼저 팔머 펭귄 데이터 불러오기\n\n::: {#7db828c1 .cell execution_count=1}\n``` {.python .cell-code}\nfrom palmerpenguins import load_penguins\npeng = load_penguins()\npeng\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>species</th>\n      <th>island</th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n      <th>sex</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>39.1</td>\n      <td>18.7</td>\n      <td>181.0</td>\n      <td>3750.0</td>\n      <td>male</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>39.5</td>\n      <td>17.4</td>\n      <td>186.0</td>\n      <td>3800.0</td>\n      <td>female</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>40.3</td>\n      <td>18.0</td>\n      <td>195.0</td>\n      <td>3250.0</td>\n      <td>female</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Adelie</td>\n      <td>Torgersen</td>\n      <td>36.7</td>\n      <td>19.3</td>\n      <td>193.0</td>\n      <td>3450.0</td>\n      <td>female</td>\n      <td>2007</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>339</th>\n      <td>Chinstrap</td>\n      <td>Dream</td>\n      <td>55.8</td>\n      <td>19.8</td>\n      <td>207.0</td>\n      <td>4000.0</td>\n      <td>male</td>\n      <td>2009</td>\n    </tr>\n    <tr>\n      <th>340</th>\n      <td>Chinstrap</td>\n      <td>Dream</td>\n      <td>43.5</td>\n      <td>18.1</td>\n      <td>202.0</td>\n      <td>3400.0</td>\n      <td>female</td>\n      <td>2009</td>\n    </tr>\n    <tr>\n      <th>341</th>\n      <td>Chinstrap</td>\n      <td>Dream</td>\n      <td>49.6</td>\n      <td>18.2</td>\n      <td>193.0</td>\n      <td>3775.0</td>\n      <td>male</td>\n      <td>2009</td>\n    </tr>\n    <tr>\n      <th>342</th>\n      <td>Chinstrap</td>\n      <td>Dream</td>\n      <td>50.8</td>\n      <td>19.0</td>\n      <td>210.0</td>\n      <td>4100.0</td>\n      <td>male</td>\n      <td>2009</td>\n    </tr>\n    <tr>\n      <th>343</th>\n      <td>Chinstrap</td>\n      <td>Dream</td>\n      <td>50.2</td>\n      <td>18.7</td>\n      <td>198.0</td>\n      <td>3775.0</td>\n      <td>female</td>\n      <td>2009</td>\n    </tr>\n  </tbody>\n</table>\n<p>344 rows × 8 columns</p>\n</div>\n```\n:::\n:::\n\n\n팔머 펭귄 데이터는 남극에 서식하는 펭귄에 대한 정보를 담고 있음.\n\n### 각 열에 대한 설명\n\n| 열 이름           | 데이터 타입  | 설명                          |\n|-------------------|--------------|-------------------------------|\n| species           | 문자열 (str) | 펭귄의 종                     |\n| island            | 문자열 (str) | 펭귄이 발견된 섬              |\n| bill_length_mm    | 실수 (float) | 부리 길이 (mm 단위)           |\n| bill_depth_mm     | 실수 (float) | 부리 깊이 (mm 단위)           |\n| flipper_length_mm | 정수 (int)   | 날개(지느러미) 길이 (mm 단위) |\n| body_mass_g       | 정수 (int)   | 몸무게 (g 단위)               |\n| sex               | 문자열 (str) | 성별                          |\n| year              | 정수 (int)   | 데이터 수집된 연도            |\n\n이후 팔머 펭귄의 종, 서식 섬, 성별 확인\n\n::: {#0f4a6402 .cell execution_count=2}\n``` {.python .cell-code}\nset(peng['species']) # 어떤 종 있는지 확인\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n{'Adelie', 'Chinstrap', 'Gentoo'}\n```\n:::\n:::\n\n\n펭귄의 종은 Adelie, Chinstrap, Gentoo 의 세 종류 확인 가능.\n\n::: {#bcd9147a .cell execution_count=3}\n``` {.python .cell-code}\nset(peng['island']) # 어떤 섬 있는지 확인\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n{'Biscoe', 'Dream', 'Torgersen'}\n```\n:::\n:::\n\n\n펭귄이 서식하는 섬은 Biscoe, Dream, Torgersen 으로 확인 가능.\n\n::: {#e39f6945 .cell execution_count=4}\n``` {.python .cell-code}\nset(peng['sex']) # 어떤 성별 있는지 확인\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n{'female', 'male', nan}\n```\n:::\n:::\n\n\n펭귄의 성별은 female, male 과 수집되지 않아 데이터가 없는 nan 으로 확인 가능.\n\n<br>\n\n<br>\n\n## 2. 팔머 펭귄 데이터 계산 함수 작성 및 데이터 프레임 정리\n\n팔머 펭귄의 종별 특징을 확인하기 위해서, 숫자형 데이터의 경우 평균값, 최댓값, 최솟값을 확인. 이외 데이터인 서식 섬과 성별은 각각의 해당 개체 수 확인.\n\n위 데이터들을 확인할 수 있는 함수 작성.\n\n::: {#7ea90b6a .cell execution_count=5}\n``` {.python .cell-code}\nimport pandas as pd\n\n#  모든 펭귄 종에 대해 평균, 최댓값, 최솟값 및 개체 수를 계산하는 함수\ndef summarize_species(data, name):\n    \n    # 특정 종의 데이터 필터링\n    species_data = data.loc[data['species'] == name, ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g', 'year']]\n    \n    # 숫자형 데이터 평균, 최댓값, 최솟값 계산\n    species_mean = species_data.mean()\n    species_max = species_data.max()\n    species_min = species_data.min()\n    \n    # 섬별 서식 수 계산\n    biscoe_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Biscoe')])\n    dream_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Dream')])\n    torgersen_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Torgersen')])\n    island_nan = data.loc[data['species'] == name, 'island'].isna().sum()\n\n    # 성별 개체 수 계산\n    male_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'male')])\n    female_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'female')])\n    sex_nan = data.loc[data['species'] == name, 'sex'].isna().sum()\n\n    # 데이터프레임으로 변환\n    species_df = pd.DataFrame({\n        'bill_length_mm_mean': [species_mean['bill_length_mm']],\n        'bill_depth_mm_mean': [species_mean['bill_depth_mm']],\n        'flipper_length_mm_mean': [species_mean['flipper_length_mm']],\n        'body_mass_g_mean': [species_mean['body_mass_g']],\n        'year_mean': [species_mean['year']],\n        'bill_length_mm_max': [species_max['bill_length_mm']],\n        'bill_depth_mm_max': [species_max['bill_depth_mm']],\n        'flipper_length_mm_max': [species_max['flipper_length_mm']],\n        'body_mass_g_max': [species_max['body_mass_g']],\n        'year_max': [species_max['year']],\n        'bill_length_mm_min': [species_min['bill_length_mm']],\n        'bill_depth_mm_min': [species_min['bill_depth_mm']],\n        'flipper_length_mm_min': [species_min['flipper_length_mm']],\n        'body_mass_g_min': [species_min['body_mass_g']],\n        'year_min': [species_min['year']],\n        'Biscoe_live': [biscoe_live],\n        'Dream_live': [dream_live],\n        'Torgersen_live': [torgersen_live],\n        'island_nan': [island_nan],\n        'male': [male_count],\n        'female': [female_count],\n        'sex_nan': [sex_nan]\n    })\n\n    return species_df\n```\n:::\n\n\n만든 함수 통해서 각 펭귄 종에 대한 데이터 뽑아낸 후, 하나의 데이터 프레임으로 정리.\n\n::: {#f9697579 .cell execution_count=6}\n``` {.python .cell-code}\n# 만든 함수 통해 세 종류 펭귄 데이터 구하기\npeng_A_df = summarize_species(peng, 'Adelie')\npeng_C_df = summarize_species(peng, 'Chinstrap')\npeng_G_df = summarize_species(peng, 'Gentoo')\n\n# 세 개의 데이터를 하나의 데이터프레임으로 합치기\npeng_final = pd.concat([peng_A_df, peng_C_df, peng_G_df], ignore_index=True)\n\n# 펭귄 종 이름으로 인덱스 변경\npeng_final.index = ['Adelie', 'Chinstrap', 'Gentoo']\n\n# 최종 결과 확인\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 1000)\npeng_final\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bill_length_mm_mean</th>\n      <th>bill_depth_mm_mean</th>\n      <th>flipper_length_mm_mean</th>\n      <th>body_mass_g_mean</th>\n      <th>year_mean</th>\n      <th>bill_length_mm_max</th>\n      <th>bill_depth_mm_max</th>\n      <th>flipper_length_mm_max</th>\n      <th>body_mass_g_max</th>\n      <th>year_max</th>\n      <th>bill_length_mm_min</th>\n      <th>bill_depth_mm_min</th>\n      <th>flipper_length_mm_min</th>\n      <th>body_mass_g_min</th>\n      <th>year_min</th>\n      <th>Biscoe_live</th>\n      <th>Dream_live</th>\n      <th>Torgersen_live</th>\n      <th>island_nan</th>\n      <th>male</th>\n      <th>female</th>\n      <th>sex_nan</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Adelie</th>\n      <td>38.791391</td>\n      <td>18.346358</td>\n      <td>189.953642</td>\n      <td>3700.662252</td>\n      <td>2008.013158</td>\n      <td>46.0</td>\n      <td>21.5</td>\n      <td>210.0</td>\n      <td>4775.0</td>\n      <td>2009.0</td>\n      <td>32.1</td>\n      <td>15.5</td>\n      <td>172.0</td>\n      <td>2850.0</td>\n      <td>2007.0</td>\n      <td>44</td>\n      <td>56</td>\n      <td>52</td>\n      <td>0</td>\n      <td>73</td>\n      <td>73</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>Chinstrap</th>\n      <td>48.833824</td>\n      <td>18.420588</td>\n      <td>195.823529</td>\n      <td>3733.088235</td>\n      <td>2007.970588</td>\n      <td>58.0</td>\n      <td>20.8</td>\n      <td>212.0</td>\n      <td>4800.0</td>\n      <td>2009.0</td>\n      <td>40.9</td>\n      <td>16.4</td>\n      <td>178.0</td>\n      <td>2700.0</td>\n      <td>2007.0</td>\n      <td>0</td>\n      <td>68</td>\n      <td>0</td>\n      <td>0</td>\n      <td>34</td>\n      <td>34</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>Gentoo</th>\n      <td>47.504878</td>\n      <td>14.982114</td>\n      <td>217.186992</td>\n      <td>5076.016260</td>\n      <td>2008.080645</td>\n      <td>59.6</td>\n      <td>17.3</td>\n      <td>231.0</td>\n      <td>6300.0</td>\n      <td>2009.0</td>\n      <td>40.9</td>\n      <td>13.1</td>\n      <td>203.0</td>\n      <td>3950.0</td>\n      <td>2007.0</td>\n      <td>124</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>61</td>\n      <td>58</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n최종 데이터 프레임 형식으로 세 종에 대한 정리 데이터 확인 가능.\n\n<br>\n\n<br>\n\n## 3. 최종 데이터 통한 팔머 펭귄 종별 특징 분석\n\n### 1) 분석 방향성 정하기\n\n#### - 분석 가능 여부\n\n-   먼저, 각 종들의 성비가 비슷함(34:34, 73:73, 61:58)을 통해 성비의 균형에 따라 각 펭귄들의 데이터가 비교할 가치가 있음.\n\n-   또한 각 데이터가 입력된 년도가 비슷하기에 비교할 가치가 있음.\n\n#### - 분석 방향성\n\n-   평균데이터를 통해서 각 펭귄 종들의 신체적 특징 비교 가능.\n\n-   최대, 최소 데이터를 통해서 이상치를 비교할 수 있음.\n\n<br>\n\n### 2) 데이터 비교\n\n#### - 평균 데이터\n\n![](mean1.PNG)\n\n해당 데이터를 통해 일반적으로 부리는 Chinstrap이 크고, 다른 종들은 상대적으로 작음을 확인 가능.\n\n또한 날개 길이와 몸무게는 Gentoo가 가장 크기 때문에 상대적으로 덩치가 큰 편임.\n반대로, Adelie의 덩치가 상대적으로 작은 편임을 알 수 있음.\n\n#### - 최대, 최소 데이터\n\n![](max1.PNG)\n\n![](min1.PNG)\n\n최대, 최소 데이터를 통해서는 이상치가 Gentoo와 Adelie에 많이 있음을 확인 가능.\n\nAdelie는 세 지역에 고루 분포해있기 때문에 이상치가 있을 확률이 높고, Gentoo는 한 지역에만 있기 때문에 종 자체가 자랄 때 변동폭이 있음을 유추 가능.\n\n추가로 Chinstrap은 종이 평균적으로 비슷하게 자람을 확인 가능.\n\n<br>\n\n### 3) 분석 결과\n\n-   **부리 길이**\n\nChinstrap \\> Gentoo \\> Adelie\n\n-   **부리 깊이**\n\nChinstrap \\> Adelie \\> Gentoo\n\n-   **날개 길이, 몸무게**\n\nGentoo \\> Chinstrap \\> Adelie\n\n-   **이상치 존재 가능성**\n\nGentoo \\> Adelie \\> Chinstrap\n\n<br>\n\n### 4) 추가 분석 제안\n\n-   'Adelie' 종은 3가지 섬에 모두 살기 때문에 해당 종끼리의 데이터 비교를 통해 사는 환경에 따라 달라지는 경향을 확인 가능함.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}