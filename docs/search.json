[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "godfuf-blog",
    "section": "",
    "text": "팔머 펭귄 데이터 분석\n\n\n\n\n\n\nanalysis\n\n\ncode\n\n\n\n\n\n\n\n\n\nMar 7, 2025\n\n\n12 조 - 홍주형, 황지융\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nMar 6, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMar 3, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\nimport numpy as np\n\na = np.arange(10)\na\n\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
  },
  {
    "objectID": "posts/palmer penguin/index.html",
    "href": "posts/palmer penguin/index.html",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "먼저 팔머 펭귄 데이터 불러오기\n\nfrom palmerpenguins import load_penguins\npeng = load_penguins()\npeng\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n339\nChinstrap\nDream\n55.8\n19.8\n207.0\n4000.0\nmale\n2009\n\n\n340\nChinstrap\nDream\n43.5\n18.1\n202.0\n3400.0\nfemale\n2009\n\n\n341\nChinstrap\nDream\n49.6\n18.2\n193.0\n3775.0\nmale\n2009\n\n\n342\nChinstrap\nDream\n50.8\n19.0\n210.0\n4100.0\nmale\n2009\n\n\n343\nChinstrap\nDream\n50.2\n18.7\n198.0\n3775.0\nfemale\n2009\n\n\n\n\n344 rows × 8 columns\n\n\n\n팔머 펭귄 데이터는 남극에 서식하는 펭귄에 대한 정보를 담고 있음.\n\n\n\n\n\n열 이름\n데이터 타입\n설명\n\n\n\n\nspecies\n문자열 (str)\n펭귄의 종\n\n\nisland\n문자열 (str)\n펭귄이 발견된 섬\n\n\nbill_length_mm\n실수 (float)\n부리 길이 (mm 단위)\n\n\nbill_depth_mm\n실수 (float)\n부리 깊이 (mm 단위)\n\n\nflipper_length_mm\n정수 (int)\n날개(지느러미) 길이 (mm 단위)\n\n\nbody_mass_g\n정수 (int)\n몸무게 (g 단위)\n\n\nsex\n문자열 (str)\n성별\n\n\nyear\n정수 (int)\n데이터 수집된 연도\n\n\n\n이후 팔머 펭귄의 종, 서식 섬, 성별 확인\n\nset(peng['species']) # 어떤 종 있는지 확인\n\n{'Adelie', 'Chinstrap', 'Gentoo'}\n\n\n펭귄의 종은 Adelie, Chinstrap, Gentoo 의 세 종류 확인 가능.\n\nset(peng['island']) # 어떤 섬 있는지 확인\n\n{'Biscoe', 'Dream', 'Torgersen'}\n\n\n펭귄이 서식하는 섬은 Biscoe, Dream, Torgersen 으로 확인 가능.\n\nset(peng['sex']) # 어떤 성별 있는지 확인\n\n{'female', 'male', nan}\n\n\n펭귄의 성별은 female, male 과 수집되지 않아 데이터가 없는 nan 으로 확인 가능.\n\n\n\n\n\n\n팔머 펭귄의 종별 특징을 확인하기 위해서, 숫자형 데이터의 경우 평균값, 최댓값, 최솟값을 확인. 이외 데이터인 서식 섬과 성별은 각각의 해당 개체 수 확인.\n위 데이터들을 확인할 수 있는 함수 작성.\n\nimport pandas as pd\n\n#  모든 펭귄 종에 대해 평균, 최댓값, 최솟값 및 개체 수를 계산하는 함수\ndef summarize_species(data, name):\n    \n    # 특정 종의 데이터 필터링\n    species_data = data.loc[data['species'] == name, ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g', 'year']]\n    \n    # 숫자형 데이터 평균, 최댓값, 최솟값 계산\n    species_mean = species_data.mean()\n    species_max = species_data.max()\n    species_min = species_data.min()\n    \n    # 섬별 서식 수 계산\n    biscoe_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Biscoe')])\n    dream_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Dream')])\n    torgersen_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Torgersen')])\n    island_nan = data.loc[data['species'] == name, 'island'].isna().sum()\n\n    # 성별 개체 수 계산\n    male_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'male')])\n    female_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'female')])\n    sex_nan = data.loc[data['species'] == name, 'sex'].isna().sum()\n\n    # 데이터프레임으로 변환\n    species_df = pd.DataFrame({\n        'bill_length_mm_mean': [species_mean['bill_length_mm']],\n        'bill_depth_mm_mean': [species_mean['bill_depth_mm']],\n        'flipper_length_mm_mean': [species_mean['flipper_length_mm']],\n        'body_mass_g_mean': [species_mean['body_mass_g']],\n        'year_mean': [species_mean['year']],\n        'bill_length_mm_max': [species_max['bill_length_mm']],\n        'bill_depth_mm_max': [species_max['bill_depth_mm']],\n        'flipper_length_mm_max': [species_max['flipper_length_mm']],\n        'body_mass_g_max': [species_max['body_mass_g']],\n        'year_max': [species_max['year']],\n        'bill_length_mm_min': [species_min['bill_length_mm']],\n        'bill_depth_mm_min': [species_min['bill_depth_mm']],\n        'flipper_length_mm_min': [species_min['flipper_length_mm']],\n        'body_mass_g_min': [species_min['body_mass_g']],\n        'year_min': [species_min['year']],\n        'Biscoe_live': [biscoe_live],\n        'Dream_live': [dream_live],\n        'Torgersen_live': [torgersen_live],\n        'island_nan': [island_nan],\n        'male': [male_count],\n        'female': [female_count],\n        'sex_nan': [sex_nan]\n    })\n\n    return species_df\n\n만든 함수 통해서 각 펭귄 종에 대한 데이터 뽑아낸 후, 하나의 데이터 프레임으로 정리.\n\n# 만든 함수 통해 세 종류 펭귄 데이터 구하기\npeng_A_df = summarize_species(peng, 'Adelie')\npeng_C_df = summarize_species(peng, 'Chinstrap')\npeng_G_df = summarize_species(peng, 'Gentoo')\n\n# 세 개의 데이터를 하나의 데이터프레임으로 합치기\npeng_final = pd.concat([peng_A_df, peng_C_df, peng_G_df], ignore_index=True)\n\n# 펭귄 종 이름으로 인덱스 변경\npeng_final.index = ['Adelie', 'Chinstrap', 'Gentoo']\n\n# 최종 결과 확인\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 1000)\npeng_final\n\n\n\n\n\n\n\n\nbill_length_mm_mean\nbill_depth_mm_mean\nflipper_length_mm_mean\nbody_mass_g_mean\nyear_mean\nbill_length_mm_max\nbill_depth_mm_max\nflipper_length_mm_max\nbody_mass_g_max\nyear_max\nbill_length_mm_min\nbill_depth_mm_min\nflipper_length_mm_min\nbody_mass_g_min\nyear_min\nBiscoe_live\nDream_live\nTorgersen_live\nisland_nan\nmale\nfemale\nsex_nan\n\n\n\n\nAdelie\n38.791391\n18.346358\n189.953642\n3700.662252\n2008.013158\n46.0\n21.5\n210.0\n4775.0\n2009.0\n32.1\n15.5\n172.0\n2850.0\n2007.0\n44\n56\n52\n0\n73\n73\n6\n\n\nChinstrap\n48.833824\n18.420588\n195.823529\n3733.088235\n2007.970588\n58.0\n20.8\n212.0\n4800.0\n2009.0\n40.9\n16.4\n178.0\n2700.0\n2007.0\n0\n68\n0\n0\n34\n34\n0\n\n\nGentoo\n47.504878\n14.982114\n217.186992\n5076.016260\n2008.080645\n59.6\n17.3\n231.0\n6300.0\n2009.0\n40.9\n13.1\n203.0\n3950.0\n2007.0\n124\n0\n0\n0\n61\n58\n5\n\n\n\n\n\n\n\n최종 데이터 프레임 형식으로 세 종에 대한 정리 데이터 확인 가능.\n\n\n\n\n\n\n\n\n\n\n먼저, 각 종들의 성비가 비슷함(34:34, 73:73, 61:58)을 통해 성비의 균형에 따라 각 펭귄들의 데이터가 비교할 가치가 있음.\n또한 각 데이터가 입력된 년도가 비슷하기에 비교할 가치가 있음.\n\n\n\n\n\n평균데이터를 통해서 각 펭귄 종들의 신체적 특징 비교 가능.\n최대, 최소 데이터를 통해서 이상치를 비교할 수 있음.\n\n\n\n\n\n\n\n\n\n해당 데이터를 통해 일반적으로 부리는 Chinstrap이 크고, 다른 종들은 상대적으로 작음을 확인 가능.\n또한 날개 길이와 몸무게는 Gentoo가 가장 크기 때문에 상대적으로 덩치가 큰 편임. 반대로, Adelie의 덩치가 상대적으로 작은 편임을 알 수 있음.\n\n\n\n\n\n최대, 최소 데이터를 통해서는 이상치가 Gentoo와 Adelie에 많이 있음을 확인 가능.\nAdelie는 세 지역에 고루 분포해있기 때문에 이상치가 있을 확률이 높고, Gentoo는 한 지역에만 있기 때문에 종 자체가 자랄 때 변동폭이 있음을 유추 가능.\n추가로 Chinstrap은 종이 평균적으로 비슷하게 자람을 확인 가능.\n\n\n\n\n\n\n부리 길이\n\nChinstrap &gt; Gentoo &gt; Adelie\n\n부리 깊이\n\nChinstrap &gt; Adelie &gt; Gentoo\n\n날개 길이, 몸무게\n\nGentoo &gt; Chinstrap &gt; Adelie\n\n이상치 존재 가능성\n\nGentoo &gt; Adelie &gt; Chinstrap\n\n\n\n\n\n‘Adelie’ 종은 3가지 섬에 모두 살기 때문에 해당 종끼리의 데이터 비교를 통해 사는 환경에 따라 달라지는 경향을 확인 가능함."
  },
  {
    "objectID": "posts/palmer penguin/index.html#팔머-펭귄-데이터-확인",
    "href": "posts/palmer penguin/index.html#팔머-펭귄-데이터-확인",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "먼저 팔머 펭귄 데이터 불러오기\n\nfrom palmerpenguins import load_penguins\npeng = load_penguins()\npeng\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n339\nChinstrap\nDream\n55.8\n19.8\n207.0\n4000.0\nmale\n2009\n\n\n340\nChinstrap\nDream\n43.5\n18.1\n202.0\n3400.0\nfemale\n2009\n\n\n341\nChinstrap\nDream\n49.6\n18.2\n193.0\n3775.0\nmale\n2009\n\n\n342\nChinstrap\nDream\n50.8\n19.0\n210.0\n4100.0\nmale\n2009\n\n\n343\nChinstrap\nDream\n50.2\n18.7\n198.0\n3775.0\nfemale\n2009\n\n\n\n\n344 rows × 8 columns\n\n\n\n팔머 펭귄 데이터는 남극에 서식하는 펭귄에 대한 정보를 담고 있음.\n\n\n\n\n\n열 이름\n데이터 타입\n설명\n\n\n\n\nspecies\n문자열 (str)\n펭귄의 종\n\n\nisland\n문자열 (str)\n펭귄이 발견된 섬\n\n\nbill_length_mm\n실수 (float)\n부리 길이 (mm 단위)\n\n\nbill_depth_mm\n실수 (float)\n부리 깊이 (mm 단위)\n\n\nflipper_length_mm\n정수 (int)\n날개(지느러미) 길이 (mm 단위)\n\n\nbody_mass_g\n정수 (int)\n몸무게 (g 단위)\n\n\nsex\n문자열 (str)\n성별\n\n\nyear\n정수 (int)\n데이터 수집된 연도\n\n\n\n이후 팔머 펭귄의 종, 서식 섬, 성별 확인\n\nset(peng['species']) # 어떤 종 있는지 확인\n\n{'Adelie', 'Chinstrap', 'Gentoo'}\n\n\n펭귄의 종은 Adelie, Chinstrap, Gentoo 의 세 종류 확인 가능.\n\nset(peng['island']) # 어떤 섬 있는지 확인\n\n{'Biscoe', 'Dream', 'Torgersen'}\n\n\n펭귄이 서식하는 섬은 Biscoe, Dream, Torgersen 으로 확인 가능.\n\nset(peng['sex']) # 어떤 성별 있는지 확인\n\n{'female', 'male', nan}\n\n\n펭귄의 성별은 female, male 과 수집되지 않아 데이터가 없는 nan 으로 확인 가능."
  },
  {
    "objectID": "posts/palmer penguin/index.html#팔머-펭귄-데이터-계산-함수-작성-및-데이터-프레임-정리",
    "href": "posts/palmer penguin/index.html#팔머-펭귄-데이터-계산-함수-작성-및-데이터-프레임-정리",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "팔머 펭귄의 종별 특징을 확인하기 위해서, 숫자형 데이터의 경우 평균값, 최댓값, 최솟값을 확인. 이외 데이터인 서식 섬과 성별은 각각의 해당 개체 수 확인.\n위 데이터들을 확인할 수 있는 함수 작성.\n\nimport pandas as pd\n\n#  모든 펭귄 종에 대해 평균, 최댓값, 최솟값 및 개체 수를 계산하는 함수\ndef summarize_species(data, name):\n    \n    # 특정 종의 데이터 필터링\n    species_data = data.loc[data['species'] == name, ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g', 'year']]\n    \n    # 숫자형 데이터 평균, 최댓값, 최솟값 계산\n    species_mean = species_data.mean()\n    species_max = species_data.max()\n    species_min = species_data.min()\n    \n    # 섬별 서식 수 계산\n    biscoe_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Biscoe')])\n    dream_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Dream')])\n    torgersen_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Torgersen')])\n    island_nan = data.loc[data['species'] == name, 'island'].isna().sum()\n\n    # 성별 개체 수 계산\n    male_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'male')])\n    female_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'female')])\n    sex_nan = data.loc[data['species'] == name, 'sex'].isna().sum()\n\n    # 데이터프레임으로 변환\n    species_df = pd.DataFrame({\n        'bill_length_mm_mean': [species_mean['bill_length_mm']],\n        'bill_depth_mm_mean': [species_mean['bill_depth_mm']],\n        'flipper_length_mm_mean': [species_mean['flipper_length_mm']],\n        'body_mass_g_mean': [species_mean['body_mass_g']],\n        'year_mean': [species_mean['year']],\n        'bill_length_mm_max': [species_max['bill_length_mm']],\n        'bill_depth_mm_max': [species_max['bill_depth_mm']],\n        'flipper_length_mm_max': [species_max['flipper_length_mm']],\n        'body_mass_g_max': [species_max['body_mass_g']],\n        'year_max': [species_max['year']],\n        'bill_length_mm_min': [species_min['bill_length_mm']],\n        'bill_depth_mm_min': [species_min['bill_depth_mm']],\n        'flipper_length_mm_min': [species_min['flipper_length_mm']],\n        'body_mass_g_min': [species_min['body_mass_g']],\n        'year_min': [species_min['year']],\n        'Biscoe_live': [biscoe_live],\n        'Dream_live': [dream_live],\n        'Torgersen_live': [torgersen_live],\n        'island_nan': [island_nan],\n        'male': [male_count],\n        'female': [female_count],\n        'sex_nan': [sex_nan]\n    })\n\n    return species_df\n\n만든 함수 통해서 각 펭귄 종에 대한 데이터 뽑아낸 후, 하나의 데이터 프레임으로 정리.\n\n# 만든 함수 통해 세 종류 펭귄 데이터 구하기\npeng_A_df = summarize_species(peng, 'Adelie')\npeng_C_df = summarize_species(peng, 'Chinstrap')\npeng_G_df = summarize_species(peng, 'Gentoo')\n\n# 세 개의 데이터를 하나의 데이터프레임으로 합치기\npeng_final = pd.concat([peng_A_df, peng_C_df, peng_G_df], ignore_index=True)\n\n# 펭귄 종 이름으로 인덱스 변경\npeng_final.index = ['Adelie', 'Chinstrap', 'Gentoo']\n\n# 최종 결과 확인\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 1000)\npeng_final\n\n\n\n\n\n\n\n\nbill_length_mm_mean\nbill_depth_mm_mean\nflipper_length_mm_mean\nbody_mass_g_mean\nyear_mean\nbill_length_mm_max\nbill_depth_mm_max\nflipper_length_mm_max\nbody_mass_g_max\nyear_max\nbill_length_mm_min\nbill_depth_mm_min\nflipper_length_mm_min\nbody_mass_g_min\nyear_min\nBiscoe_live\nDream_live\nTorgersen_live\nisland_nan\nmale\nfemale\nsex_nan\n\n\n\n\nAdelie\n38.791391\n18.346358\n189.953642\n3700.662252\n2008.013158\n46.0\n21.5\n210.0\n4775.0\n2009.0\n32.1\n15.5\n172.0\n2850.0\n2007.0\n44\n56\n52\n0\n73\n73\n6\n\n\nChinstrap\n48.833824\n18.420588\n195.823529\n3733.088235\n2007.970588\n58.0\n20.8\n212.0\n4800.0\n2009.0\n40.9\n16.4\n178.0\n2700.0\n2007.0\n0\n68\n0\n0\n34\n34\n0\n\n\nGentoo\n47.504878\n14.982114\n217.186992\n5076.016260\n2008.080645\n59.6\n17.3\n231.0\n6300.0\n2009.0\n40.9\n13.1\n203.0\n3950.0\n2007.0\n124\n0\n0\n0\n61\n58\n5\n\n\n\n\n\n\n\n최종 데이터 프레임 형식으로 세 종에 대한 정리 데이터 확인 가능."
  },
  {
    "objectID": "posts/palmer penguin/index.html#최종-데이터-통한-팔머-펭귄-종별-특징-분석",
    "href": "posts/palmer penguin/index.html#최종-데이터-통한-팔머-펭귄-종별-특징-분석",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "먼저, 각 종들의 성비가 비슷함(34:34, 73:73, 61:58)을 통해 성비의 균형에 따라 각 펭귄들의 데이터가 비교할 가치가 있음.\n또한 각 데이터가 입력된 년도가 비슷하기에 비교할 가치가 있음.\n\n\n\n\n\n평균데이터를 통해서 각 펭귄 종들의 신체적 특징 비교 가능.\n최대, 최소 데이터를 통해서 이상치를 비교할 수 있음.\n\n\n\n\n\n\n\n\n\n해당 데이터를 통해 일반적으로 부리는 Chinstrap이 크고, 다른 종들은 상대적으로 작음을 확인 가능.\n또한 날개 길이와 몸무게는 Gentoo가 가장 크기 때문에 상대적으로 덩치가 큰 편임. 반대로, Adelie의 덩치가 상대적으로 작은 편임을 알 수 있음.\n\n\n\n\n\n최대, 최소 데이터를 통해서는 이상치가 Gentoo와 Adelie에 많이 있음을 확인 가능.\nAdelie는 세 지역에 고루 분포해있기 때문에 이상치가 있을 확률이 높고, Gentoo는 한 지역에만 있기 때문에 종 자체가 자랄 때 변동폭이 있음을 유추 가능.\n추가로 Chinstrap은 종이 평균적으로 비슷하게 자람을 확인 가능.\n\n\n\n\n\n\n부리 길이\n\nChinstrap &gt; Gentoo &gt; Adelie\n\n부리 깊이\n\nChinstrap &gt; Adelie &gt; Gentoo\n\n날개 길이, 몸무게\n\nGentoo &gt; Chinstrap &gt; Adelie\n\n이상치 존재 가능성\n\nGentoo &gt; Adelie &gt; Chinstrap\n\n\n\n\n\n‘Adelie’ 종은 3가지 섬에 모두 살기 때문에 해당 종끼리의 데이터 비교를 통해 사는 환경에 따라 달라지는 경향을 확인 가능함."
  },
  {
    "objectID": "posts/palmer-penguin/index.html",
    "href": "posts/palmer-penguin/index.html",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "먼저 팔머 펭귄 데이터 불러오기\n\nfrom palmerpenguins import load_penguins\npeng = load_penguins()\npeng\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n339\nChinstrap\nDream\n55.8\n19.8\n207.0\n4000.0\nmale\n2009\n\n\n340\nChinstrap\nDream\n43.5\n18.1\n202.0\n3400.0\nfemale\n2009\n\n\n341\nChinstrap\nDream\n49.6\n18.2\n193.0\n3775.0\nmale\n2009\n\n\n342\nChinstrap\nDream\n50.8\n19.0\n210.0\n4100.0\nmale\n2009\n\n\n343\nChinstrap\nDream\n50.2\n18.7\n198.0\n3775.0\nfemale\n2009\n\n\n\n\n344 rows × 8 columns\n\n\n\n팔머 펭귄 데이터는 남극에 서식하는 펭귄에 대한 정보를 담고 있음.\n\n\n\n\n\n열 이름\n데이터 타입\n설명\n\n\n\n\nspecies\n문자열 (str)\n펭귄의 종\n\n\nisland\n문자열 (str)\n펭귄이 발견된 섬\n\n\nbill_length_mm\n실수 (float)\n부리 길이 (mm 단위)\n\n\nbill_depth_mm\n실수 (float)\n부리 깊이 (mm 단위)\n\n\nflipper_length_mm\n정수 (int)\n날개(지느러미) 길이 (mm 단위)\n\n\nbody_mass_g\n정수 (int)\n몸무게 (g 단위)\n\n\nsex\n문자열 (str)\n성별\n\n\nyear\n정수 (int)\n데이터 수집된 연도\n\n\n\n이후 팔머 펭귄의 종, 서식 섬, 성별 확인\n\nset(peng['species']) # 어떤 종 있는지 확인\n\n{'Adelie', 'Chinstrap', 'Gentoo'}\n\n\n펭귄의 종은 Adelie, Chinstrap, Gentoo 의 세 종류 확인 가능.\n\nset(peng['island']) # 어떤 섬 있는지 확인\n\n{'Biscoe', 'Dream', 'Torgersen'}\n\n\n펭귄이 서식하는 섬은 Biscoe, Dream, Torgersen 으로 확인 가능.\n\nset(peng['sex']) # 어떤 성별 있는지 확인\n\n{'female', 'male', nan}\n\n\n펭귄의 성별은 female, male 과 수집되지 않아 데이터가 없는 nan 으로 확인 가능.\n\n\n\n\n\n\n팔머 펭귄의 종별 특징을 확인하기 위해서, 숫자형 데이터의 경우 평균값, 최댓값, 최솟값을 확인. 이외 데이터인 서식 섬과 성별은 각각의 해당 개체 수 확인.\n위 데이터들을 확인할 수 있는 함수 작성.\n\nimport pandas as pd\n\n#  모든 펭귄 종에 대해 평균, 최댓값, 최솟값 및 개체 수를 계산하는 함수\ndef summarize_species(data, name):\n    \n    # 특정 종의 데이터 필터링\n    species_data = data.loc[data['species'] == name, ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g', 'year']]\n    \n    # 숫자형 데이터 평균, 최댓값, 최솟값 계산\n    species_mean = species_data.mean()\n    species_max = species_data.max()\n    species_min = species_data.min()\n    \n    # 섬별 서식 수 계산\n    biscoe_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Biscoe')])\n    dream_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Dream')])\n    torgersen_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Torgersen')])\n    island_nan = data.loc[data['species'] == name, 'island'].isna().sum()\n\n    # 성별 개체 수 계산\n    male_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'male')])\n    female_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'female')])\n    sex_nan = data.loc[data['species'] == name, 'sex'].isna().sum()\n\n    # 데이터프레임으로 변환\n    species_df = pd.DataFrame({\n        'bill_length_mm_mean': [species_mean['bill_length_mm']],\n        'bill_depth_mm_mean': [species_mean['bill_depth_mm']],\n        'flipper_length_mm_mean': [species_mean['flipper_length_mm']],\n        'body_mass_g_mean': [species_mean['body_mass_g']],\n        'year_mean': [species_mean['year']],\n        'bill_length_mm_max': [species_max['bill_length_mm']],\n        'bill_depth_mm_max': [species_max['bill_depth_mm']],\n        'flipper_length_mm_max': [species_max['flipper_length_mm']],\n        'body_mass_g_max': [species_max['body_mass_g']],\n        'year_max': [species_max['year']],\n        'bill_length_mm_min': [species_min['bill_length_mm']],\n        'bill_depth_mm_min': [species_min['bill_depth_mm']],\n        'flipper_length_mm_min': [species_min['flipper_length_mm']],\n        'body_mass_g_min': [species_min['body_mass_g']],\n        'year_min': [species_min['year']],\n        'Biscoe_live': [biscoe_live],\n        'Dream_live': [dream_live],\n        'Torgersen_live': [torgersen_live],\n        'island_nan': [island_nan],\n        'male': [male_count],\n        'female': [female_count],\n        'sex_nan': [sex_nan]\n    })\n\n    return species_df\n\n만든 함수 통해서 각 펭귄 종에 대한 데이터 뽑아낸 후, 하나의 데이터 프레임으로 정리.\n\n# 만든 함수 통해 세 종류 펭귄 데이터 구하기\npeng_A_df = summarize_species(peng, 'Adelie')\npeng_C_df = summarize_species(peng, 'Chinstrap')\npeng_G_df = summarize_species(peng, 'Gentoo')\n\n# 세 개의 데이터를 하나의 데이터프레임으로 합치기\npeng_final = pd.concat([peng_A_df, peng_C_df, peng_G_df], ignore_index=True)\n\n# 펭귄 종 이름으로 인덱스 변경\npeng_final.index = ['Adelie', 'Chinstrap', 'Gentoo']\n\n# 최종 결과 확인\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 1000)\npeng_final\n\n\n\n\n\n\n\n\nbill_length_mm_mean\nbill_depth_mm_mean\nflipper_length_mm_mean\nbody_mass_g_mean\nyear_mean\nbill_length_mm_max\nbill_depth_mm_max\nflipper_length_mm_max\nbody_mass_g_max\nyear_max\nbill_length_mm_min\nbill_depth_mm_min\nflipper_length_mm_min\nbody_mass_g_min\nyear_min\nBiscoe_live\nDream_live\nTorgersen_live\nisland_nan\nmale\nfemale\nsex_nan\n\n\n\n\nAdelie\n38.791391\n18.346358\n189.953642\n3700.662252\n2008.013158\n46.0\n21.5\n210.0\n4775.0\n2009.0\n32.1\n15.5\n172.0\n2850.0\n2007.0\n44\n56\n52\n0\n73\n73\n6\n\n\nChinstrap\n48.833824\n18.420588\n195.823529\n3733.088235\n2007.970588\n58.0\n20.8\n212.0\n4800.0\n2009.0\n40.9\n16.4\n178.0\n2700.0\n2007.0\n0\n68\n0\n0\n34\n34\n0\n\n\nGentoo\n47.504878\n14.982114\n217.186992\n5076.016260\n2008.080645\n59.6\n17.3\n231.0\n6300.0\n2009.0\n40.9\n13.1\n203.0\n3950.0\n2007.0\n124\n0\n0\n0\n61\n58\n5\n\n\n\n\n\n\n\n최종 데이터 프레임 형식으로 세 종에 대한 정리 데이터 확인 가능.\n\n\n\n\n\n\n\n\n\n\n먼저, 각 종들의 성비가 비슷함(34:34, 73:73, 61:58)을 통해 성비의 균형에 따라 각 펭귄들의 데이터가 비교할 가치가 있음.\n또한 각 데이터가 입력된 년도가 비슷하기에 비교할 가치가 있음.\n\n\n\n\n\n평균데이터를 통해서 각 펭귄 종들의 신체적 특징 비교 가능.\n최대, 최소 데이터를 통해서 이상치를 비교할 수 있음.\n\n\n\n\n\n\n\n\n\n해당 데이터를 통해 일반적으로 부리는 Chinstrap이 크고, 다른 종들은 상대적으로 작음을 확인 가능.\n또한 날개 길이와 몸무게는 Gentoo가 가장 크기 때문에 상대적으로 덩치가 큰 편임. 반대로, Adelie의 덩치가 상대적으로 작은 편임을 알 수 있음.\n\n\n\n\n\n최대, 최소 데이터를 통해서는 이상치가 Gentoo와 Adelie에 많이 있음을 확인 가능.\nAdelie는 세 지역에 고루 분포해있기 때문에 이상치가 있을 확률이 높고, Gentoo는 한 지역에만 있기 때문에 종 자체가 자랄 때 변동폭이 있음을 유추 가능.\n추가로 Chinstrap은 종이 평균적으로 비슷하게 자람을 확인 가능.\n\n\n\n\n\n\n부리 길이\n\nChinstrap &gt; Gentoo &gt; Adelie\n\n부리 깊이\n\nChinstrap &gt; Adelie &gt; Gentoo\n\n날개 길이, 몸무게\n\nGentoo &gt; Chinstrap &gt; Adelie\n\n이상치 존재 가능성\n\nGentoo &gt; Adelie &gt; Chinstrap\n\n\n\n\n\n‘Adelie’ 종은 3가지 섬에 모두 살기 때문에 해당 종끼리의 데이터 비교를 통해 사는 환경에 따라 달라지는 경향을 확인 가능함."
  },
  {
    "objectID": "posts/palmer-penguin/index.html#팔머-펭귄-데이터-확인",
    "href": "posts/palmer-penguin/index.html#팔머-펭귄-데이터-확인",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "먼저 팔머 펭귄 데이터 불러오기\n\nfrom palmerpenguins import load_penguins\npeng = load_penguins()\npeng\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n339\nChinstrap\nDream\n55.8\n19.8\n207.0\n4000.0\nmale\n2009\n\n\n340\nChinstrap\nDream\n43.5\n18.1\n202.0\n3400.0\nfemale\n2009\n\n\n341\nChinstrap\nDream\n49.6\n18.2\n193.0\n3775.0\nmale\n2009\n\n\n342\nChinstrap\nDream\n50.8\n19.0\n210.0\n4100.0\nmale\n2009\n\n\n343\nChinstrap\nDream\n50.2\n18.7\n198.0\n3775.0\nfemale\n2009\n\n\n\n\n344 rows × 8 columns\n\n\n\n팔머 펭귄 데이터는 남극에 서식하는 펭귄에 대한 정보를 담고 있음.\n\n\n\n\n\n열 이름\n데이터 타입\n설명\n\n\n\n\nspecies\n문자열 (str)\n펭귄의 종\n\n\nisland\n문자열 (str)\n펭귄이 발견된 섬\n\n\nbill_length_mm\n실수 (float)\n부리 길이 (mm 단위)\n\n\nbill_depth_mm\n실수 (float)\n부리 깊이 (mm 단위)\n\n\nflipper_length_mm\n정수 (int)\n날개(지느러미) 길이 (mm 단위)\n\n\nbody_mass_g\n정수 (int)\n몸무게 (g 단위)\n\n\nsex\n문자열 (str)\n성별\n\n\nyear\n정수 (int)\n데이터 수집된 연도\n\n\n\n이후 팔머 펭귄의 종, 서식 섬, 성별 확인\n\nset(peng['species']) # 어떤 종 있는지 확인\n\n{'Adelie', 'Chinstrap', 'Gentoo'}\n\n\n펭귄의 종은 Adelie, Chinstrap, Gentoo 의 세 종류 확인 가능.\n\nset(peng['island']) # 어떤 섬 있는지 확인\n\n{'Biscoe', 'Dream', 'Torgersen'}\n\n\n펭귄이 서식하는 섬은 Biscoe, Dream, Torgersen 으로 확인 가능.\n\nset(peng['sex']) # 어떤 성별 있는지 확인\n\n{'female', 'male', nan}\n\n\n펭귄의 성별은 female, male 과 수집되지 않아 데이터가 없는 nan 으로 확인 가능."
  },
  {
    "objectID": "posts/palmer-penguin/index.html#팔머-펭귄-데이터-계산-함수-작성-및-데이터-프레임-정리",
    "href": "posts/palmer-penguin/index.html#팔머-펭귄-데이터-계산-함수-작성-및-데이터-프레임-정리",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "팔머 펭귄의 종별 특징을 확인하기 위해서, 숫자형 데이터의 경우 평균값, 최댓값, 최솟값을 확인. 이외 데이터인 서식 섬과 성별은 각각의 해당 개체 수 확인.\n위 데이터들을 확인할 수 있는 함수 작성.\n\nimport pandas as pd\n\n#  모든 펭귄 종에 대해 평균, 최댓값, 최솟값 및 개체 수를 계산하는 함수\ndef summarize_species(data, name):\n    \n    # 특정 종의 데이터 필터링\n    species_data = data.loc[data['species'] == name, ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g', 'year']]\n    \n    # 숫자형 데이터 평균, 최댓값, 최솟값 계산\n    species_mean = species_data.mean()\n    species_max = species_data.max()\n    species_min = species_data.min()\n    \n    # 섬별 서식 수 계산\n    biscoe_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Biscoe')])\n    dream_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Dream')])\n    torgersen_live = len(data.loc[(data['species'] == name) & (data['island'] == 'Torgersen')])\n    island_nan = data.loc[data['species'] == name, 'island'].isna().sum()\n\n    # 성별 개체 수 계산\n    male_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'male')])\n    female_count = len(data.loc[(data['species'] == name) & (data['sex'] == 'female')])\n    sex_nan = data.loc[data['species'] == name, 'sex'].isna().sum()\n\n    # 데이터프레임으로 변환\n    species_df = pd.DataFrame({\n        'bill_length_mm_mean': [species_mean['bill_length_mm']],\n        'bill_depth_mm_mean': [species_mean['bill_depth_mm']],\n        'flipper_length_mm_mean': [species_mean['flipper_length_mm']],\n        'body_mass_g_mean': [species_mean['body_mass_g']],\n        'year_mean': [species_mean['year']],\n        'bill_length_mm_max': [species_max['bill_length_mm']],\n        'bill_depth_mm_max': [species_max['bill_depth_mm']],\n        'flipper_length_mm_max': [species_max['flipper_length_mm']],\n        'body_mass_g_max': [species_max['body_mass_g']],\n        'year_max': [species_max['year']],\n        'bill_length_mm_min': [species_min['bill_length_mm']],\n        'bill_depth_mm_min': [species_min['bill_depth_mm']],\n        'flipper_length_mm_min': [species_min['flipper_length_mm']],\n        'body_mass_g_min': [species_min['body_mass_g']],\n        'year_min': [species_min['year']],\n        'Biscoe_live': [biscoe_live],\n        'Dream_live': [dream_live],\n        'Torgersen_live': [torgersen_live],\n        'island_nan': [island_nan],\n        'male': [male_count],\n        'female': [female_count],\n        'sex_nan': [sex_nan]\n    })\n\n    return species_df\n\n만든 함수 통해서 각 펭귄 종에 대한 데이터 뽑아낸 후, 하나의 데이터 프레임으로 정리.\n\n# 만든 함수 통해 세 종류 펭귄 데이터 구하기\npeng_A_df = summarize_species(peng, 'Adelie')\npeng_C_df = summarize_species(peng, 'Chinstrap')\npeng_G_df = summarize_species(peng, 'Gentoo')\n\n# 세 개의 데이터를 하나의 데이터프레임으로 합치기\npeng_final = pd.concat([peng_A_df, peng_C_df, peng_G_df], ignore_index=True)\n\n# 펭귄 종 이름으로 인덱스 변경\npeng_final.index = ['Adelie', 'Chinstrap', 'Gentoo']\n\n# 최종 결과 확인\npd.set_option('display.max_columns', None)\npd.set_option('display.width', 1000)\npeng_final\n\n\n\n\n\n\n\n\nbill_length_mm_mean\nbill_depth_mm_mean\nflipper_length_mm_mean\nbody_mass_g_mean\nyear_mean\nbill_length_mm_max\nbill_depth_mm_max\nflipper_length_mm_max\nbody_mass_g_max\nyear_max\nbill_length_mm_min\nbill_depth_mm_min\nflipper_length_mm_min\nbody_mass_g_min\nyear_min\nBiscoe_live\nDream_live\nTorgersen_live\nisland_nan\nmale\nfemale\nsex_nan\n\n\n\n\nAdelie\n38.791391\n18.346358\n189.953642\n3700.662252\n2008.013158\n46.0\n21.5\n210.0\n4775.0\n2009.0\n32.1\n15.5\n172.0\n2850.0\n2007.0\n44\n56\n52\n0\n73\n73\n6\n\n\nChinstrap\n48.833824\n18.420588\n195.823529\n3733.088235\n2007.970588\n58.0\n20.8\n212.0\n4800.0\n2009.0\n40.9\n16.4\n178.0\n2700.0\n2007.0\n0\n68\n0\n0\n34\n34\n0\n\n\nGentoo\n47.504878\n14.982114\n217.186992\n5076.016260\n2008.080645\n59.6\n17.3\n231.0\n6300.0\n2009.0\n40.9\n13.1\n203.0\n3950.0\n2007.0\n124\n0\n0\n0\n61\n58\n5\n\n\n\n\n\n\n\n최종 데이터 프레임 형식으로 세 종에 대한 정리 데이터 확인 가능."
  },
  {
    "objectID": "posts/palmer-penguin/index.html#최종-데이터-통한-팔머-펭귄-종별-특징-분석",
    "href": "posts/palmer-penguin/index.html#최종-데이터-통한-팔머-펭귄-종별-특징-분석",
    "title": "팔머 펭귄 데이터 분석",
    "section": "",
    "text": "먼저, 각 종들의 성비가 비슷함(34:34, 73:73, 61:58)을 통해 성비의 균형에 따라 각 펭귄들의 데이터가 비교할 가치가 있음.\n또한 각 데이터가 입력된 년도가 비슷하기에 비교할 가치가 있음.\n\n\n\n\n\n평균데이터를 통해서 각 펭귄 종들의 신체적 특징 비교 가능.\n최대, 최소 데이터를 통해서 이상치를 비교할 수 있음.\n\n\n\n\n\n\n\n\n\n해당 데이터를 통해 일반적으로 부리는 Chinstrap이 크고, 다른 종들은 상대적으로 작음을 확인 가능.\n또한 날개 길이와 몸무게는 Gentoo가 가장 크기 때문에 상대적으로 덩치가 큰 편임. 반대로, Adelie의 덩치가 상대적으로 작은 편임을 알 수 있음.\n\n\n\n\n\n최대, 최소 데이터를 통해서는 이상치가 Gentoo와 Adelie에 많이 있음을 확인 가능.\nAdelie는 세 지역에 고루 분포해있기 때문에 이상치가 있을 확률이 높고, Gentoo는 한 지역에만 있기 때문에 종 자체가 자랄 때 변동폭이 있음을 유추 가능.\n추가로 Chinstrap은 종이 평균적으로 비슷하게 자람을 확인 가능.\n\n\n\n\n\n\n부리 길이\n\nChinstrap &gt; Gentoo &gt; Adelie\n\n부리 깊이\n\nChinstrap &gt; Adelie &gt; Gentoo\n\n날개 길이, 몸무게\n\nGentoo &gt; Chinstrap &gt; Adelie\n\n이상치 존재 가능성\n\nGentoo &gt; Adelie &gt; Chinstrap\n\n\n\n\n\n‘Adelie’ 종은 3가지 섬에 모두 살기 때문에 해당 종끼리의 데이터 비교를 통해 사는 환경에 따라 달라지는 경향을 확인 가능함."
  }
]